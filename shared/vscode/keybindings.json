// place your key bindings in this file to override the defaults
[
	/* --- editor --- */
	/* :: comment :: */
	/* line comment */
	{
		"key": "ctrl+[Backslash]",
		"command": "editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+7",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	/* block comment */
	{
		"key": "ctrl+shift+[Backslash]",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	/* :: select / delete :: */
	/* word part */
	{
		"key": "alt+left",
		"command": "cursorWordPartLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+left",
		"command": "cursorWordPartLeftSelect",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+right",
		"command": "cursorWordPartRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+right",
		"command": "cursorWordPartRightSelect",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+backspace",
		"command": "deleteWordPartLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+delete",
		"command": "deleteWordPartRight",
		"when": "textInputFocus && !editorReadonly"
	},
	/* delete line */
	{
		"key": "ctrl+shift+backspace",
		"command": "deleteAllLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+delete",
		"command": "deleteAllRight",
		"when": "textInputFocus && !editorReadonly"
	},
	/* smart select */
	{
		"key": "shift+alt+down",
		"command": "editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	/* :: multiline :: */
	/* duplicate cursor */
	{
		"key": "ctrl+alt+down",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+up",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	/* copy line */
	{
		"key": "ctrl+shift+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+up",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	/* misc */
	{
		"key": "ctrl+k i",
		"command": "changeEditorIndentation"
	},
	{
		"key": "shift+enter",
		"command": "editor.action.insertLineBefore",
		"when": "editorTextFocus && !editorReadonly"
	},
	/* --- workbench --- */
	/* tabs */
	{
		"key": "ctrl+tab",
		"command": "workbench.action.nextEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.previousEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	// overwrite
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	/* navigate */
	{
		"key": "browserback",
		"command": "workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "browserforward",
		"command": "workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	// overwrite
	{
		"key": "ctrl+alt+-",
		"command": "-workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	/* open */
	// define
	{
		"key": "ctrl+o",
		"command": "workbench.action.gotoSymbol",
		"when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
	},
	{
		"key": "ctrl+o",
		"command": "editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.files.openFile",
		"when": "true"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.files.openLocalFile",
		"when": "remoteFileDialogVisible"
	},
	// overwrite
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.gotoSymbol",
		"when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFile",
		"when": "true"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openLocalFile",
		"when": "remoteFileDialogVisible"
	},
	/* files */
	{
		"key": "ctrl+n",
		"command": "explorer.newFile"
	},
	{
		"key": "ctrl+alt+n",
		"command": "workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "shift+f2",
		"command": "renameFile",
		"when": "foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly"
	},
	/* --- terminal --- */
	/* tabs */
	{
		"key": "ctrl+t",
		"command": "workbench.action.terminal.new",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+tab",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	/* toggle */
	{
		"key": "ctrl+shift+[Equal]",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+[Semicolon]",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+[Semicolon]",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+capslock",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	/* --- overwrite --- */
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+left",
		"command": "-gitlens.key.alt+left",
		"when": "gitlens:key:alt+left"
	},
	{
		"key": "alt+right",
		"command": "-gitlens.key.alt+right",
		"when": "gitlens:key:alt+right"
	},
	{
		"key": "alt+delete",
		"command": "-notebook.cell.clearOutputs",
		"when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+shift+0",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+w",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	/* --- misc --- */
	{
		"key": "ctrl+k i",
		"command": "-interactiveEditor.start",
		"when": "interactiveEditorHasProvider && !editorReadonly"
	},
	{
		"key": "ctrl+up",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	/* --- tmp --- */
]
